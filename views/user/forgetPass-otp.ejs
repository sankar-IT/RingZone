<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>RingoZne - OTP Verification</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <style>
    .otp-input {
      width: 3rem;
      height: 3rem;
      margin: 0 0.5rem;
      font-size: 1.5rem;
      text-align: center;
      border: 1px solid #d1d5db;
      border-radius: 0.375rem;
    }
    .otp-input:focus {
      outline: none;
      border-color: #3b82f6;
      box-shadow: 0 0 0 2px #bfdbfe;
    }
    #resend-btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  </style>
</head>
<body class="bg-gray-50 flex items-center justify-center min-h-screen">

  <div class="bg-white rounded-xl shadow-lg flex w-full max-w-4xl overflow-hidden">
    
    
    <div class="hidden md:flex w-1/2 bg-white-100 items-center justify-center">
      <img src="https://i.pinimg.com/736x/88/10/52/8810521b6114c23be76ca2937daa5f4e.jpg" alt="Phone" class="w-2/3">
    </div>
    
    
    <div class="w-full md:w-1/2 p-10">
      <h2 class="text-2xl font-bold text-gray-800 mb-2 text-center">Verify OTP</h2>
      <p class="text-gray-600 mb-6 text-center">We've sent a 6-digit code to <%= email %></p>
      
      <form id="otpForm" class="space-y-6">
        <div class="flex justify-center">
          <input type="text" maxlength="1" class="otp-input" pattern="\d*" inputmode="numeric" required>
          <input type="text" maxlength="1" class="otp-input" pattern="\d*" inputmode="numeric" required>
          <input type="text" maxlength="1" class="otp-input" pattern="\d*" inputmode="numeric" required>
          <input type="text" maxlength="1" class="otp-input" pattern="\d*" inputmode="numeric" required>
          <input type="text" maxlength="1" class="otp-input" pattern="\d*" inputmode="numeric" required>
          <input type="text" maxlength="1" class="otp-input" pattern="\d*" inputmode="numeric" required>
        </div>
        
        <input type="hidden" name="email" value="<%= email %>">
        
        <button type="submit" class="w-full bg-red-600 text-white py-2 rounded-md hover:bg-red-700 transition">
          Verify & Reset Password
        </button>
      </form>

    
      <div class="mt-6 text-center">
        <p class="text-sm text-gray-600">
          Didn't receive the code? 
          <button id="resend-btn" class="text-blue-600 hover:underline font-medium" disabled>
            Resend OTP (<span id="countdown">60</span>s)
          </button>
        </p>
      </div>

      <% if (locals.error && error.length > 0) { %>
        <div class="bg-red-100 text-red-700 border border-red-400 px-4 py-3 rounded text-center mt-4">
          <%= error %>
        </div>
      <% } %>
    </div>
  </div> 

  <script>
    
    const otpInputs = document.querySelectorAll('.otp-input');
    otpInputs.forEach((input, index) => {
      input.addEventListener('input', (e) => {
        if (e.target.value.length === 1 && index < otpInputs.length - 1) {
          otpInputs[index + 1].focus();
        }
      });
      
      input.addEventListener('keydown', (e) => {
        if (e.key === 'Backspace' && index > 0 && !e.target.value) {
          otpInputs[index - 1].focus();
        }
      });
    });


    let timeLeft = 60;
    const countdownEl = document.getElementById('countdown');
    const resendBtn = document.getElementById('resend-btn');
    
    function updateTimer() {
      const minutes = Math.floor(timeLeft / 60);
      const seconds = timeLeft % 60;
      countdownEl.textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
      
     
      if (timeLeft > 30) {
        countdownEl.className = 'text-green-600';
      } else if (timeLeft > 10) {
        countdownEl.className = 'text-yellow-600';
      } else {
        countdownEl.className = 'text-red-600 font-bold';
      }
      
      if (timeLeft <= 0) {
        clearInterval(timerInterval);
        resendBtn.disabled = false;
        countdownEl.textContent = '0:00';
        countdownEl.style.display = 'none';
      }
      
      timeLeft--;
    }
    
    const timerInterval = setInterval(updateTimer, 1000);
    updateTimer(); 


    document.getElementById('otpForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const otp = Array.from(otpInputs).map(input => input.value).join('');
      
      if (otp.length !== 6) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid OTP',
          text: 'Please enter a complete 6-digit code'
        });
        return;
      }
      
      $.ajax({
        type: 'POST',
        url: '/verify-passforget-otp',
        data: { otp: otp, email: '<%= email %>' },
        success: function(response) {
          if (response.success) {
            Swal.fire({
              icon: 'success',
              title: 'OTP Verified',
              text: 'You will be redirected to reset your password',
              timer: 1500,
              showConfirmButton: false
            }).then(() => {
              window.location.href = response.redirectUrl;
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Invalid OTP',
              text: response.message || 'The OTP you entered is incorrect'
            });
          }
        },
        error: function() {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to verify OTP. Please try again'
          });
        }
      });
    });


    resendBtn.addEventListener('click', function() {
      $.ajax({
        type: 'POST',
        url: '/resend-forgot-otp',
        data: { email: '<%= email %>' },
        beforeSend: function() {
          resendBtn.disabled = true;
        },
        success: function(response) {
          if (response.success) {
        
            timeLeft = 60;
            clearInterval(timerInterval);
            countdownEl.style.display = 'inline';
            const newTimer = setInterval(updateTimer, 1000);
            
            Swal.fire({
              icon: 'success',
              title: 'OTP Resent',
              text: 'A new OTP has been sent to your email',
              timer: 1500,
              showConfirmButton: false
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: response.message || 'Failed to resend OTP'
            });
            resendBtn.disabled = false;
          }
        },
        error: function() {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to resend OTP. Please try again'
          });
          resendBtn.disabled = false;
        }
      });
    });
  </script>
</body>
</html>