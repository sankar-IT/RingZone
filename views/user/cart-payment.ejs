<%- include('../../views/partials/user/header') %>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
body {
    background-color: #f5f5f5;
    font-family: 'Segoe UI', sans-serif;
    margin-top: 120px;
  }

  .step-nav span {
    padding: 8px 14px;
    border-radius: 10px;
    margin-right: 10px;
    font-weight: 500;
    font-size: 15px;
    background-color: #eee;
    transition: all 0.3s ease-in-out;
  }

  .step-nav .active {
    background-color: #ff4646;
    color: #fff;
    box-shadow: 0 3px 8px rgba(255, 70, 70, 0.3);
  }

  .cart-box {
    background: #fff;
    border-radius: 12px;
    padding: 20px;
    box-shadow: 0 0 5px rgba(0,0,0,0.1);
  }

  .btn-red {
    background-color: #ff4646;
    color: white;
    border: none;
    font-weight: 600;
    letter-spacing: 0.5px;
  }

  .btn-red:hover {
    background-color: #e63e3e;
  }

  .payment-box {
    background: white;
    padding: 25px;
    border-radius: 15px;
    box-shadow: 0 0 10px rgba(0,0,0,0.07);
    transition: box-shadow 0.3s ease-in-out;
  }

  .payment-box:hover {
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
  }

  .form-check-label i {
    margin-right: 8px;
    color: #ff4646;
  }

  @media (max-width: 768px) {
    .step-nav span {
      font-size: 14px;
      margin-right: 5px;
      padding: 6px 10px;
    }
  }
  .wallet-balance {
    font-size: 14px;
    color: #28a745;
    font-weight: 500;
    margin-left: 30px;
  }
</style>

<div class="container my-5">
  <div class="mb-4 text-center step-nav">
    <a href="/user-cart"><span>Cart</span></a>
    <a href="/checkout"><span>Checkout</span></a>
    <span class="active">Payment</span>
  </div>

  <div class="row">
    <div class="col-md-8">
      <div class="payment-box mb-4">
        <h5 class="mb-4">Choose Your Payment Method</h5>

        <div class="form-check mb-3">
          <input class="form-check-input" type="radio" name="payment" id="cod" checked>
          <label class="form-check-label" for="cod">
            <i class="fas fa-money-bill-wave"></i> Cash on Delivery
          </label>
        </div>

        <div class="form-check mb-3">
          <input class="form-check-input" type="radio" name="payment" id="card">
          <label class="form-check-label" for="card">
            <i class="fas fa-credit-card"></i> Debit / Credit Card
          </label>
        </div>

        <!-- <div class="form-check mb-3">
          <input class="form-check-input" type="radio" name="payment" id="wallet">
          <label class="form-check-label" for="wallet">
            <i class="fas fa-wallet"></i> Wallet
            <span class="wallet-balance" id="walletBalanceDisplay">Loading balance...</span>
          </label>
        </div> -->

      </div>
    </div>

    <div class="col-md-4">
      <div class="cart-box">
        <h5 class="mb-3">Order summary</h5>
        <div class="d-flex justify-content-between mb-2">
          <span>Subtotal</span><span id="subtotal">₹<%= orderSummary.subtotal %></span>
        </div>
        <div class="d-flex justify-content-between mb-2">
          <span>Discount</span><span id="discountValue">₹<%= orderSummary.discount %></span>
        </div>
        <div class="d-flex justify-content-between mb-2">
          <span>Shipment Cost</span><span id="shipment">₹<%= orderSummary.shipment %></span>
        </div>
        <hr>
        <div class="d-flex justify-content-between fw-bold mb-3">
          <span>Grand Total</span><span id="grandTotal">₹<%= orderSummary.grandTotal %></span>
        </div>

        <button id="checkoutBtn" class="btn btn-success w-100">
          <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="checkoutSpinner"></span>
          <span id="checkoutText">Place secure order</span>
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  const razorpayKey = "<%= razorpayKey %>";
  const spinner = document.getElementById('checkoutSpinner');
  let walletBalance = 0;

  // Load wallet balance when page loads
  document.addEventListener('DOMContentLoaded', async () => {
    try {
      const response = await fetch('/wallet/balance');
      const data = await response.json();
      if (data.success) {
        walletBalance = data.balance;
        document.getElementById('walletBalanceDisplay').textContent = `(Balance: ₹${walletBalance.toFixed(2)})`;
      }
    } catch (error) {
      console.error('Error fetching wallet balance:', error);
      document.getElementById('walletBalanceDisplay').textContent = '(Balance unavailable)';
    }
  });

  function resetBtn() {
    spinner.classList.add('d-none');
    const btnText = document.getElementById('checkoutText');
    btnText.textContent = 'Place secure order';
    const btn = document.getElementById('checkoutBtn');
    btn.disabled = false;
  }

  document.getElementById('checkoutBtn').addEventListener('click', async () => {
    try {
      const btnText = document.getElementById('checkoutText');
      const btn = document.getElementById('checkoutBtn');
      spinner.classList.remove('d-none');
      btnText.textContent = 'Processing...';
      btn.disabled = true;

      const selectedPaymentMethod = document.querySelector('input[name="payment"]:checked')?.id;
      const grandTotal = parseInt(
        document.getElementById('grandTotal').textContent.replace(/[₹,]/g, '')
      );

      if (selectedPaymentMethod === 'card') {
       
        const orderRes = await fetch('/create-razorpay-order', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ finalAmount: grandTotal }),
        });

        const data = await orderRes.json();

        if (!orderRes.ok || !data.success) {
          throw new Error(data.message || 'Failed to create Razorpay order.');
        }

        const options = {
          key: data.keyId,
          amount: data.amount,
          currency: data.currency,
          order_id: data.orderId,
          name: "Your Store",
          description: "Payment for order",
          image: "/images/logo.png",
          prefill: {
            name: data.customer?.name || '',
            email: data.customer?.email || '',
            contact: data.customer?.phone || '',
          },
          theme: { color: "#ff4646" },
          handler: async function (response) {
            try {
              const verifyRes = await fetch('/verify-razorpay-payment', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                  razorpay_order_id: response.razorpay_order_id,
                  razorpay_payment_id: response.razorpay_payment_id,
                  razorpay_signature: response.razorpay_signature,
                  order_id: data.dbOrderId,
                }),
              });

              const verifyData = await verifyRes.json();

              if (verifyRes.ok && verifyData.redirectUrl) {
                window.location.href = verifyData.redirectUrl;
              } else {
                window.location.href = `/payment-failure/${data?.orderId}`;
              }
            } catch (err) {
              console.error("Error verifying payment:", err);
              window.location.href = `/payment-failure/${data?.orderId}`;
            }
          },
          modal: {
            ondismiss: function () {
              window.location.href = `/payment-failure/${data?.orderId}`;
            },
          },
        };

        const rzp = new Razorpay(options);
        rzp.on('payment.failed', function (response) {
          console.error("Payment Failed:", response.error);
          resetBtn();
          window.location.href = `/payment-failure/${data?.orderId}`;
        });
        rzp.open();

      } else if (selectedPaymentMethod === 'wallet') {
        
        if (walletBalance < grandTotal) {
          const result = await Swal.fire({
            title: 'Insufficient Balance',
            text: `Your wallet balance (₹${walletBalance.toFixed(2)}) is less than the order total (₹${grandTotal}). Would you like to add money to your wallet?`,
            icon: 'warning',
            showCancelButton: true,
            cancelButtonText: 'Cancel'
          });

          if (result.isConfirmed) {
            window.location.href = '/wallet';
          }
          resetBtn();
          return;
        }

        const response = await fetch('/place-order/wallet', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });

        const result = await response.json();
        
        if (result.success) {
          window.location.href = result.redirectUrl || '/order-placed';
        } else {
          Swal.fire('Oops!', result.message || 'Payment failed', 'error');
          resetBtn();
        }

      } else {
   
        const response = await fetch('/place-order', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });

        const result = await response.json();
        if (result.success) {
          window.location.href = result.redirectUrl || '/order-placed';
        } else {
          Swal.fire('Oops!', result.message || 'Cart is empty.', 'warning');
          resetBtn();
        }
      }
    } catch (err) {
      console.error("Checkout error:", err);
      Swal.fire('Error', err.message || 'Something went wrong during checkout.', 'error');
      resetBtn();
    }
  });
</script>

<%- include('../../views/partials/user/footer') %>