<%- include('../../views/partials/user/header') %>
<%
function buildFilterUrl(newParams) {
  const params = {
    brand: typeof selectedBrand !== 'undefined' && selectedBrand ? selectedBrand : undefined,
    category: typeof selectedCategory !== 'undefined' && selectedCategory ? selectedCategory : undefined,
    gt: typeof gt !== 'undefined' && gt ? gt : undefined,
    lt: typeof lt !== 'undefined' && lt ? lt : undefined,
    search: typeof search !== 'undefined' && search ? search : undefined,
    sort: typeof sort !== 'undefined' && sort ? sort : undefined,
    page: typeof currentPage !== 'undefined' && currentPage ? currentPage : undefined,
    ...newParams
  };
  const query = Object.entries(params)
    .filter(([k, v]) => typeof v !== 'undefined' && v !== null && v !== '')
    .map(([k, v]) => `${k}=${v}`)
    .join('&');
  return '/shopping-pageList?' + query;
}
%>

<style>
:root {
  --primary: #ff4646;
  --primary-dark: #e63c3c;
  --secondary: #10b981;
  --accent: #f59e0b;
  --gray-100: #f8fafc;
  --gray-200: #e2e8f0;
  --gray-300: #cbd5e1;
  --gray-400: #94a3b8;
  --gray-500: #64748b;
  --gray-600: #475569;
  --gray-700: #334155;
  --gray-800: #1e293b;
  --gray-900: #0f172a;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-md: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --shadow-lg: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  --radius: 8px;
  --radius-lg: 12px;
  --transition: all 0.3s ease;
}

body {
  background: var(--gray-100);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica', 'Arial', sans-serif;
  margin: 0;
  color: var(--gray-800);
  line-height: 1.6;
  font-size: 16px;
}

.product-link {
  text-decoration: none;
  color: inherit;
  display: block;
  transition: var(--transition);
}

.product-link:hover {
  transform: translateY(-8px);
}

.product-list-page {
  display: flex;
  max-width: 1400px;
  margin: 20px auto 0 auto;
  gap: 30px;
  padding: 0 20px;
  margin-top: 100px;
  align-items: flex-start;
}

.offer-badge {
  position: absolute;
  top: 12px;
  left: 12px;
  background: linear-gradient(135deg, var(--primary), var(--primary-dark));
  color: #fff;
  padding: 6px 12px;
  font-size: 12px;
  font-weight: 700;
  border-radius: 20px;
  z-index: 2;
  box-shadow: var(--shadow);
  letter-spacing: 0.5px;
}

.product-card {
  position: relative;
  background: #fff;
  border-radius: var(--radius-lg);
  padding: 18px;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  box-sizing: border-box;
  box-shadow: var(--shadow);
  transition: var(--transition);
  overflow: hidden;
  height: 100%;
  border: 1px solid var(--gray-200);
}

.product-card:hover {
  box-shadow: var(--shadow-lg);
  border-color: var(--primary);
}

.product-card img {
  width: 100%;
  height: 200px;
  object-fit: contain;
  border-radius: var(--radius);
  margin-bottom: 16px;
  background: linear-gradient(to bottom, var(--gray-100), var(--gray-200));
  padding: 15px;
  transition: var(--transition);
}

.product-card:hover img {
  transform: scale(1.05);
}

.product-card h3 {
  margin: 12px 0 6px 0;
  font-size: 16px;
  color: var(--gray-800);
  font-weight: 600;
  line-height: 1.4;
}

.product-card .desc {
  margin: 0 0 12px 0;
  color: var(--gray-600);
  font-size: 14px;
  line-height: 1.4;
  font-weight: 500;
}

.price-row {
  margin-bottom: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.old-price {
  color: var(--gray-400);
  text-decoration: line-through;
  font-size: 14px;
}

.new-price {
  color: var(--primary);
  font-weight: 700;
  font-size: 18px;
}

.discount {
  color: var(--primary);
  font-weight: 600;
  font-size: 14px;
  background: rgba(255, 70, 70, 0.1);
  padding: 2px 8px;
  border-radius: 4px;
}

.product-card button {
  background: linear-gradient(135deg, var(--primary), var(--primary-dark));
  color: #fff;
  border: none;
  border-radius: var(--radius);
  padding: 12px 0;
  width: 100%;
  font-size: 15px;
  cursor: pointer;
  transition: var(--transition);
  font-weight: 600;
  margin-top: auto;
  letter-spacing: 0.3px;
  position: relative;
  overflow: hidden;
}

.product-card button:before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  transition: 0.5s;
}

.product-card button:hover:before {
  left: 100%;
}

.product-card button:hover {
  background: linear-gradient(135deg, var(--primary-dark), #e63c3c);
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(255, 70, 70, 0.2);
}

.sidebar {
  width: 280px;
  background: #fff;
  border-radius: var(--radius-lg);
  padding: 24px;
  box-shadow: var(--shadow-md);
  flex-shrink: 0;
  position: sticky;
  top: 100px;
  max-height: 85vh;
  overflow-y: auto;
  scrollbar-width: thin;
  display: flex;
  flex-direction: column;
}

.sidebar::-webkit-scrollbar {
  width: 6px;
}

.sidebar::-webkit-scrollbar-thumb {
  background: var(--gray-300);
  border-radius: 3px;
}

.sidebar h2 {
  margin-top: 0;
  color: var(--primary);
  font-size: 20px;
  margin-bottom: 24px;
  font-weight: 700;
  padding-bottom: 16px;
  border-bottom: 2px solid var(--gray-200);
  display: flex;
  align-items: center;
  gap: 10px;
}

.sidebar h2 i {
  font-size: 22px;
}

.filter-group {
  margin-bottom: 28px;
  position: relative;
}

.filter-group h4 {
  margin: 0 0 14px 0;
  color: var(--gray-800);
  font-size: 16px;
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 8px;
}

.filter-group h4 i {
  color: var(--primary);
  font-size: 18px;
}

.sidebar ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.sidebar li {
  margin-bottom: 8px;
  position: relative;
}

.sidebar a {
  text-decoration: none;
  color: var(--gray-600);
  font-size: 15px;
  transition: var(--transition);
  display: flex;
  align-items: center;
  padding: 10px 14px;
  border-radius: var(--radius);
  position: relative;
  overflow: hidden;
}

.sidebar a:hover {
  color: var(--primary);
  background-color: rgba(255, 70, 70, 0.08);
  transform: translateX(4px);
}

.sidebar a.active {
  color: var(--primary);
  font-weight: 600;
  background: linear-gradient(to right, rgba(255, 70, 70, 0.12), transparent);
  box-shadow: var(--shadow-sm);
  padding-left: 20px;
}

.sidebar a.active::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 4px;
  background: linear-gradient(to bottom, var(--primary), var(--primary-dark));
  border-radius: 0 2px 2px 0;
}

.sidebar a.active::after {
  content: 'âœ“';
  margin-left: auto;
  background: var(--primary);
  color: white;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
}

.products-container {
  flex: 1;
  width: 100%;
}

.products-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 24px;
  width: 100%;
}

.wishlist-icon {
  position: absolute;
  top: 16px;
  right: 16px;
  z-index: 10;
  background: #fff;
  width: 38px;
  height: 38px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  border-radius: 50%;
  box-shadow: var(--shadow);
  border: 1.5px solid var(--gray-200);
  cursor: pointer;
  transition: var(--transition);
}

.wishlist-icon i {
  font-size: 18px;
  color: var(--gray-400);
  transition: var(--transition);
}

.wishlist-icon.active i {
  color: var(--primary);
}

.wishlist-icon:hover {
  box-shadow: var(--shadow-md);
  border: 1.5px solid var(--primary);
  background: #fff0f0;
  transform: scale(1.1);
}

.wishlist-icon:hover i {
  color: var(--primary);
}

.pagination {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin: 40px 0 30px;
}

.pagination a {
  padding: 10px 16px;
  background: #fff;
  color: var(--primary);
  border-radius: var(--radius);
  text-decoration: none;
  border: 1px solid var(--gray-300);
  font-weight: 500;
  transition: var(--transition);
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 42px;
}

.pagination a.active, .pagination a:hover {
  background: var(--primary);
  color: #fff;
  border-color: var(--primary);
  transform: translateY(-2px);
  box-shadow: var(--shadow);
}

.search-sort-bar {
  width: 100%;
  margin-bottom: 28px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0;
  gap: 20px;
}

.search-sort-form {
  display: flex;
  gap: 16px;
  align-items: center;
  background: #fff;
  padding: 6px;
  border-radius: 60px;
  box-shadow: var(--shadow);
  width: 100%;
  max-width: 700px;
  border: 1px solid var(--gray-200);
}

.search-sort-form .search-input {
  flex: 1;
  padding: 14px 20px;
  font-size: 16px;
  border: none;
  border-radius: 60px;
  transition: var(--transition);
  background: transparent;
}

.search-sort-form .search-input:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(255, 70, 70, 0.1);
}

.search-sort-form .sort-select {
  padding: 12px 20px;
  font-size: 15px;
  border-radius: 60px;
  border: none;
  background: var(--gray-100);
  cursor: pointer;
  transition: var(--transition);
  appearance: none;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%2364748b' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 15px center;
  background-size: 16px;
  padding-right: 45px;
}

.search-sort-form .sort-select:focus {
  outline: none;
  background-color: var(--gray-200);
}

.view-options {
  display: flex;
  gap: 12px;
  align-items: center;
}

.view-toggle {
  display: flex;
  background: #fff;
  border-radius: var(--radius);
  overflow: hidden;
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--gray-300);
}

.view-toggle button {
  padding: 10px 14px;
  background: none;
  border: none;
  cursor: pointer;
  transition: var(--transition);
  color: var(--gray-600);
}

.view-toggle button.active {
  background: var(--primary);
  color: white;
}

.view-toggle button:hover {
  background: var(--gray-200);
}

.view-toggle button.active:hover {
  background: var(--primary-dark);
}

.results-count {
  font-size: 15px;
  color: var(--gray-600);
  white-space: nowrap;
  font-weight: 500;
}

.filter-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  margin-bottom: 20px;
}

.filter-tag {
  background: var(--gray-200);
  color: var(--gray-700);
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 13px;
  display: flex;
  align-items: center;
  gap: 6px;
}

.filter-tag button {
  background: none;
  border: none;
  color: var(--gray-500);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  font-size: 16px;
}

.filter-tag button:hover {
  color: var(--primary);
}

@media (max-width: 1200px) {
  .products-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 1024px) {
  .product-list-page {
    flex-direction: column;
    gap: 24px;
    margin-top: 90px;
  }
  
  .sidebar {
    width: 100%;
    position: static;
    margin-bottom: 0;
    max-height: none;
  }
  
  .products-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
  }
  
  .main-content {
    width: 100%;
  }
  
  .search-sort-bar {
    flex-direction: column;
    align-items: stretch;
    gap: 16px;
  }
  
  .view-options {
    justify-content: space-between;
  }
}

@media (max-width: 640px) {
  .products-grid {
    grid-template-columns: 1fr;
  }
  
  .product-list-page {
    margin-top: 80px;
    padding: 0 15px;
  }
  
  .search-sort-form {
    flex-direction: column;
    border-radius: var(--radius);
    gap: 10px;
    padding: 16px;
  }
  
  .search-sort-form .search-input,
  .search-sort-form .sort-select {
    border-radius: var(--radius);
    width: 100%;
  }
}

.main-content {
  flex: 1;
  width: calc(100% - 310px);
}

.no-products {
  text-align: center;
  padding: 40px 30px;
  color: var(--gray-600);
  font-size: 16px;
  background: #fff;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow);
  grid-column: 1 / -1;
}

.no-products i {
  font-size: 48px;
  color: var(--gray-300);
  margin-bottom: 16px;
  display: block;
}

.no-products h3 {
  margin: 0 0 12px 0;
  color: var(--gray-700);
  font-weight: 600;
}

.filter-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.filter-clear {
  color: var(--primary);
  font-size: 14px;
  text-decoration: none;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 6px;
}

.filter-clear:hover {
  text-decoration: underline;
}

.products-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 24px;
  flex-wrap: wrap;
  gap: 16px;
}

.stock-badge {
  position: absolute;
  bottom: 16px;
  left: 16px;
  background: var(--secondary);
  color: white;
  padding: 4px 10px;
  font-size: 12px;
  font-weight: 600;
  border-radius: 4px;
  z-index: 2;
}

.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
}

.spinner {
  width: 50px;
  height: 50px;
  border: 5px solid var(--gray-200);
  border-top: 5px solid var(--primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

.product-card {
  animation: fadeIn 0.5s ease-out;
}
.filter-checkbox {
  position: absolute;
  opacity: 0;
}

.filter-checkbox + label {
  position: relative;
  cursor: pointer;
  padding: 0;
  display: flex;
  align-items: center;
  gap: 10px;
}

.filter-checkbox + label:before {
  content: '';
  margin-right: 10px;
  display: inline-block;
  vertical-align: text-top;
  width: 18px;
  height: 18px;
  background: white;
  border: 1px solid var(--gray-300);
  border-radius: 3px;
  transition: var(--transition);
}

.filter-checkbox:hover + label:before {
  border-color: var(--primary);
}

.filter-checkbox:checked + label:before {
  background: var(--primary);
  border-color: var(--primary);
}

.filter-checkbox:checked + label:after {
  content: '';
  position: absolute;
  left: 5px;
  top: 9px;
  background: white;
  width: 2px;
  height: 2px;
  box-shadow: 
    2px 0 0 white,
    4px 0 0 white,
    4px -2px 0 white,
    4px -4px 0 white,
    4px -6px 0 white,
    4px -8px 0 white;
  transform: rotate(45deg);
}

.filter-endpoint {
  margin-top: auto;
  padding-top: 20px;
  border-top: 2px solid var(--gray-200);
}

.filter-endpoint p {
  font-size: 13px;
  color: var(--gray-500);
  text-align: center;
  margin: 0;
  padding: 10px 0;
}

.filter-endpoint a {
  color: var(--primary);
  text-decoration: none;
  font-weight: 500;
}

.filter-endpoint a:hover {
  text-decoration: underline;
}
</style>

<main class="product-list-page" style="margin-top: 180px;">
  <aside class="sidebar">
    <div class="filter-header">
      <h2><i class="fa fa-filter"></i> Filters</h2>
      <a href="/shopping-pageList" class="filter-clear"><i class="fa fa-times"></i> Clear all</a>
    </div>
    
    <div class="filter-group">
      <h4><i class="fa fa-tags"></i> Categories</h4>
      <ul>
        <% for(let i = 0; i < category.length; i++) { 
          const isActive = selectedCategory == category[i]._id.toString(); %>
          <li>
            <input type="checkbox" id="category-<%= i %>" class="filter-checkbox" <%= isActive ? 'checked' : '' %>>
            <a href="<%= buildFilterUrl({ category: category[i]._id, page: 1 }) %>" class="<%= isActive ? 'active' : '' %>">
              <%= category[i].name %>
            </a>
          </li>
        <% } %>
      </ul>
    </div>
    
    <div class="filter-group">
      <h4><i class="fa fa-building"></i> Brands</h4>
      <ul>
        <% for(let i = 0; i < brand.length; i++) { 
          const isActive = selectedBrand == brand[i]._id.toString(); %>
          <li>
            <input type="checkbox" id="brand-<%= i %>" class="filter-checkbox" <%= isActive ? 'checked' : '' %>>
            <a href="<%= buildFilterUrl({ brand: brand[i]._id, page: 1 }) %>" class="<%= isActive ? 'active' : '' %>">
              <%= brand[i].brandName %>
            </a>
          </li>
        <% } %>
      </ul>
    </div>
    
    <div class="filter-group">
      <h4><i class="fa fa-dollar-sign"></i> Price Range</h4>
      <ul>
        <%
        const priceRanges = [
          { label: "Under â‚¹10000", gt: 0, lt: 10000 },
          { label: "â‚¹10000 - â‚¹50000", gt: 10000, lt: 50000 },
          { label: "Above â‚¹50000", gt:50000,lt:200000}
        ];
        %>
        <% priceRanges.forEach((range, index) => {
          const isActive = parseInt(gt) === range.gt && parseInt(lt) === range.lt;
        %>
          <li>
            <input type="radio" id="price-<%= index %>" name="price-range" class="filter-checkbox" <%= isActive ? 'checked' : '' %>>
            <a href="<%= buildFilterUrl({ gt: range.gt, lt: range.lt, page: 1 }) %>" class="<%= isActive ? 'active' : '' %>">
              <%= range.label %>
            </a>
          </li>
        <% }) %>
      </ul>
    </div>
    
    <div class="filter-endpoint">
      
    </div>
  </aside>

  <div class="main-content">
    <div class="products-header">
      <div class="search-sort-bar">
        <form method="GET" action="/shopping-pageList" class="search-sort-form">
          <input type="text" name="search" value="<%= search || '' %>" placeholder="Search products..." class="search-input" />
          
          <select name="sort" onchange="this.form.submit()" class="sort-select">
            <option value="latest" <%= sort === 'latest' ? 'selected' : '' %>>Latest</option>
            <option value="price_asc" <%= sort === 'price_asc' ? 'selected' : '' %>>Price: Low to High</option>
            <option value="price_desc" <%= sort === 'price_desc' ? 'selected' : '' %>>Price: High to Low</option>
            <option value="popularity" <%= sort === 'popularity' ? 'selected' : '' %>>Popularity</option>
          </select>
          
          <% if (selectedCategory) { %>
            <input type="hidden" name="category" value="<%= selectedCategory %>" />
          <% } %>
          <% if (selectedBrand) { %>
            <input type="hidden" name="brand" value="<%= selectedBrand %>" />
          <% } %>
          <% if (gt && lt) { %>
            <input type="hidden" name="gt" value="<%= gt %>">
            <input type="hidden" name="lt" value="<%= lt %>">
          <% } %>
        </form>
        
        <div class="view-options">
          <div class="results-count">
            <% if (products.length > 0) { %>
              Showing <strong><%= products.length %></strong> of <strong><%= totalProducts %></strong> products
            <% } %>
          </div>
          <div class="view-toggle">
            <button id="grid-view" class="active"><i class="fa fa-th"></i></button>
            <button id="list-view"><i class="fa fa-list"></i></button>
          </div>
        </div>
      </div>
    </div>
    
    <% if (selectedCategory || selectedBrand || gt || lt || search) { %>
      <div class="filter-tags">
        <% if (selectedCategory) { %>
          <div class="filter-tag">
            Category: <%= category.find(c => c._id.toString() === selectedCategory)?.name %>
            <button onclick="removeFilter('category')"><i class="fa fa-times"></i></button>
          </div>
        <% } %>
        <% if (selectedBrand) { %>
          <div class="filter-tag">
            Brand: <%= brand.find(b => b._id.toString() === selectedBrand)?.brandName %>
            <button onclick="removeFilter('brand')"><i class="fa fa-times"></i></button>
          </div>
        <% } %>
        <% if (gt && lt) { %>
          <div class="filter-tag">
            Price: â‚¹<%= gt %> - â‚¹<%= lt %>
            <button onclick="removeFilter('price')"><i class="fa fa-times"></i></button>
          </div>
        <% } %>
        <% if (search) { %>
          <div class="filter-tag">
            Search: <%= search %>
            <button onclick="removeFilter('search')"><i class="fa fa-times"></i></button>
          </div>
        <% } %>
      </div>
    <% } %>
    
    <div class="products-container">
      <% if (products.length > 0) { %>
        <section class="products-grid">
          <% for(let i = 0; i < products.length; i++) { %>
            <a href="/products/<%= products[i]._id %>" class="product-link">
              <div class="product-card">
                <div class="offer-badge">
                  <%
                    const productOffer = Number(products[i].offer) || 0;
                    const categoryOffer = Number(products[i].category?.categoryOffer) || 0;
                    const greaterOffer = Math.max(productOffer, categoryOffer);
                    
                    if (greaterOffer > 0) {
                  %>
                    <%= greaterOffer %>% OFF
                  <% } %>
                </div>
                
                <div class="wishlist-icon" data-product-id="<%= products[i]._id %>">
                  <i class="fa fa-heart-o"></i> 
                </div>
                
                <% if (products[i].stock > 0 && products[i].stock < 10) { %>
                  <div class="stock-badge">Only <%= products[i].stock %> left!</div>
                <% } %>
                
                <img src="/<%= products[i].images[0] %>" alt="<%= products[i].productName %>">
                <h3><%= products[i].productName?.length > 22 ? products[i].productName.slice(0,22) + '...' : products[i].productName %></h3>
                <p class="desc"><%= products[i].brand.name %></p>
                
                <div class="price-row">
                  <%
                    const variant = products[i].variants[0];
                    const rp = Number(variant.regularPrice) || 0;
                    const fp = Number(variant.finalPrice) || rp;
                    const hasOffer = fp < rp;
                    const discount = hasOffer ? Math.round((rp - fp) / rp * 100) : 0;
                  %>
                  <span class="new-price">
                    â‚¹<%= fp.toLocaleString('en-IN') %>
                  </span>
                  <% if (hasOffer) { %>
                    <span class="old-price">
                      â‚¹<%= rp.toLocaleString('en-IN') %>
                    </span>
                    <span class="discount"><%= discount %>% off</span>
                  <% } %>
                </div>
                
                <button>Add to Cart</button>
              </div>
            </a>
          <% } %>
        </section>
        
        <nav class="pagination">
          <% if (currentPage > 1) { %>
            <a href="<%= buildFilterUrl({ page: currentPage - 1 }) %>"><i class="fa fa-chevron-left"></i> Previous</a>
          <% } %>
          
          <% for (let p = 1; p <= totalPages; p++) { %>
            <a href="<%= buildFilterUrl({ page: p }) %>" class="<%= currentPage === p ? 'active' : '' %>"><%= p %></a>
          <% } %>
          
          <% if (currentPage < totalPages) { %>
            <a href="<%= buildFilterUrl({ page: currentPage + 1 }) %>">Next <i class="fa fa-chevron-right"></i></a>
          <% } %>
        </nav>
      <% } else { %>
        <div class="no-products">
          <i class="fa fa-search"></i>
          <h3>No products found</h3>
          <p>We couldn't find any products matching your criteria.</p>
          <p><a href="/shopping-pageList" style="color: var(--primary); text-decoration: underline; font-weight: 500;">Clear filters</a> to see all products.</p>
        </div>
      <% } %>
    </div>
  </div>
</main>

<script>
document.addEventListener('DOMContentLoaded', function () {
  const storageKey = 'wishlistProductIds';

  function getWishlist() {
    return JSON.parse(localStorage.getItem(storageKey) || '[]');
  }

  function setWishlist(ids) {
    localStorage.setItem(storageKey, JSON.stringify(ids));
  }

  async function updateWishlistServer(productId, isAdding) {
    try {
      document.body.style.cursor = 'wait';
      
      await fetch('/wishlist/toggle', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ productId, action: isAdding ? 'add' : 'remove' })
      });
    } catch (err) {
      console.error('Wishlist update failed', err);
    } finally {
      document.body.style.cursor = 'default';
    }
  }

  const wishlist = getWishlist();

  document.querySelectorAll('.wishlist-icon').forEach(function (icon) {
    const productId = icon.dataset.productId;
    if (!productId) return; 

    const heartIcon = icon.querySelector('i');

    if (wishlist.includes(productId)) {
      icon.classList.add('active');
      heartIcon.classList.remove('fa-heart-o');
      heartIcon.classList.add('fa-heart');
    }

    icon.addEventListener('click', async function (event) {
      event.preventDefault();
      event.stopPropagation();

      icon.classList.toggle('active');
      let ids = getWishlist();

      const isAdding = icon.classList.contains('active');

      if (isAdding) {
        heartIcon.classList.remove('fa-heart-o');
        heartIcon.classList.add('fa-heart');
        if (!ids.includes(productId)) ids.push(productId);
        
        icon.style.transform = 'scale(1.3)';
        setTimeout(() => {
          icon.style.transform = 'scale(1)';
        }, 300);
      } else {
        heartIcon.classList.remove('fa-heart');
        heartIcon.classList.add('fa-heart-o');
        ids = ids.filter(id => id !== productId);
      }

      setWishlist(ids);
      await updateWishlistServer(productId, isAdding);
    });
  });
  const gridViewBtn = document.getElementById('grid-view');
  const listViewBtn = document.getElementById('list-view');
  const productsGrid = document.querySelector('.products-grid');
  
  if (gridViewBtn && listViewBtn && productsGrid) {
    gridViewBtn.addEventListener('click', () => {
      productsGrid.classList.remove('list-view');
      gridViewBtn.classList.add('active');
      listViewBtn.classList.remove('active');
    });
    
    listViewBtn.addEventListener('click', () => {
      productsGrid.classList.add('list-view');
      listViewBtn.classList.add('active');
      gridViewBtn.classList.remove('active');
    });
  }
});

function removeFilter(type) {
  let params = {};
  
  switch(type) {
    case 'category':
      params = { category: '', page: 1 };
      break;
    case 'brand':
      params = { brand: '', page: 1 };
      break;
    case 'price':
      params = { gt: '', lt: '', page: 1 };
      break;
    case 'search':
      params = { search: '', page: 1 };
      break;
  }
  
  window.location.href = buildFilterUrl(params);
}

document.addEventListener('DOMContentLoaded', function() {
  const links = document.querySelectorAll('a');
  links.forEach(link => {
    link.addEventListener('click', function() {
      if (this.href && this.href !== '#' && !this.classList.contains('wishlist-icon')) {
        const overlay = document.createElement('div');
        overlay.className = 'loading-overlay';
        overlay.innerHTML = '<div class="spinner"></div>';
        document.body.appendChild(overlay);
      }
    });
  });
});
</script>

<%- include('../../views/partials/user/footer') %>