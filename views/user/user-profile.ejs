<%- include('../../views/partials/user/header') %>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
<style>
  body {
    background-color: #f8f9fa;
    font-family: 'Segoe UI', sans-serif;
    padding-top: 20px;
    margin-top: 100px;
  }

  .sidebar {
    background: #fff;
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.06);
    height: fit-content;
  }

  .sidebar .nav-link {
    color: #495057;
    font-weight: 500;
    border-radius: 8px;
    margin-bottom: 8px;
    padding: 10px 15px;
    transition: all 0.2s ease;
  }

  .sidebar .nav-link.active,
  .sidebar .nav-link:hover {
    background-color: #ff4646;
    color: #fff;
    transform: translateX(3px);
  }

  .sidebar .nav-link i {
    width: 20px;
    text-align: center;
    margin-right: 10px;
  }

  .profile-card {
    background: #fff;
    padding: 25px;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.05);
  }

  .profile-image-wrapper {
    position: relative;
    display: inline-block;
  }

  .profile-pic {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    object-fit: cover;
    border: 3px solid #fff;
    box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
  }

  .profile-pic:hover {
    transform: scale(1.05);
  }

  .profile-pic.d-flex {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    font-size: 36px;
    margin: 0 auto;
    box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
  }

  .stats-card {
    background: #fff;
    border-radius: 12px;
    padding: 20px;
    text-align: center;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    height: 100%;
    border-left: 4px solid #ff4646;
  }

  .stats-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 15px rgba(0,0,0,0.1);
  }

  .stats-card .icon {
    font-size: 28px;
    color: #ff4646;
    margin-bottom: 10px;
  }

  .stats-card h5 {
    font-size: 1.8rem;
    margin-bottom: 5px;
    color: #333;
  }

  .stats-card p {
    color: #6c757d;
    margin-bottom: 0;
    font-size: 0.9rem;
  }

  .action-card {
    text-align: center;
    padding: 20px;
    border-radius: 12px;
    background: #fff;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    transition: all 0.3s ease;
    height: 100%;
  }

  .action-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    cursor: pointer;
  }

  .action-card i {
    font-size: 24px;
    color: #ff4646;
    margin-bottom: 10px;
  }

  .action-card span {
    display: block;
    font-weight: 500;
    color: #333;
    font-size: 0.95rem;
  }

  .note {
    font-size: 0.85rem;
    color: #6c757d;
    margin-top: 15px;
    padding: 10px;
    background-color: #f8f9fa;
    border-radius: 6px;
  }

  .btn-outline-danger {
    border-color: #ff4646;
    color: #ff4646;
    transition: all 0.2s ease;
  }

  .btn-outline-danger:hover {
    background-color: #ff4646;
    color: #fff;
    transform: translateY(-2px);
  }

  .profile-info p {
    margin-bottom: 8px;
    font-size: 0.95rem;
  }

  .profile-info strong {
    color: #495057;
  }

  h4 {
    color: #333;
    font-weight: 600;
    margin-bottom: 1.5rem;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid #f0f0f0;
  }

  h5 {
    color: #333;
    font-weight: 600;
    margin-bottom: 1rem;
  }

  @media (max-width: 768px) {
    body {
      margin-top: 80px;
      padding-top: 10px;
    }
    
    .sidebar {
      margin-bottom: 20px;
    }
    
    .profile-card {
      padding: 20px 15px;
    }
    
    .stats-card, .action-card {
      margin-bottom: 15px;
    }
  }

  a {
    text-decoration: none;
    color: inherit;
  }
  
  a:hover {
    color: inherit;
  }
</style>
</head>
<body>

<div class="container my-4 px-3 px-md-4" >
  <div class="row g-4" style="margin-top: 30px;">
    <div class="col-lg-3 col-md-4">
      <div class="sidebar">
        <div class="text-center mb-3">
          <div class="profile-image-wrapper position-relative mx-auto">
            <% if (user && user.profileImage) { %>
              <img src="<%= user.profileImage %>" class="profile-pic" alt="User">
            <% } else { %>
              <%
                const colors = ['#FF5733', '#33B5E5', '#FFB400', '#4CAF50', '#9C27B0', '#3F51B5', '#E91E63', '#795548'];
                const getColorFromName = (name) => {
                  const charCodeSum = name
                    .toUpperCase()
                    .split('')
                    .reduce((sum, char) => sum + char.charCodeAt(0), 0);
                  return colors[charCodeSum % colors.length];
                };
                const initials = (user.firstname?.charAt(0) || '').toUpperCase();
                const userColor = getColorFromName(user.firstname || 'U');
              %>
              <div class="profile-pic d-flex align-items-center justify-content-center text-white fw-bold" 
                   style="background-color:<%- userColor %>;">
                <%= initials %>
              </div>
            <% } %>
          </div>
          <h6 class="mt-2 mb-0 fw-bold">Welcome, <%= user.firstname %></h6>
          <small class="text-muted"><%= user.email %></small>
        </div>

        <nav class="nav flex-column">
          <a class="nav-link active" href="user-profile"><i class="fas fa-gauge-high me-2"></i> Dashboard</a>
          <a class="nav-link" href="edit-profile"><i class="fas fa-user-edit me-2"></i> Edit Profile</a>
          <a class="nav-link" href="view-orders"><i class="fas fa-box me-2"></i> My Orders</a>
          <a class="nav-link" href="/user-address"><i class="fas fa-map-marker-alt me-2"></i> My Address</a>
          <a class="nav-link" href="/user-wallet"><i class="fas fa-wallet me-2"></i> My Wallet</a>
        </nav>
      </div>
    </div>

    <div class="col-lg-9 col-md-8">
      <div class="profile-card mb-4">
        <h4>Dashboard</h4>
        <div class="row g-3 mb-4">
          <div class="col-md-4 col-6">
            <a href="/view-orders">
              <div class="stats-card">
                <div class="icon"><i class="fas fa-box-open"></i></div>
                <h5><%=ordersCount%></h5>
                <p>Orders</p>
              </div>
            </a>
          </div>
          <div class="col-md-4 col-6">
            <a href="/wishlist">
              <div class="stats-card">
                <div class="icon"><i class="fas fa-heart"></i></div>
                <h5><%=WishListCount%></h5>
                <p>Wishlist Items</p>
              </div>
            </a>
          </div>
          <div class="col-md-4 col-6">
            <a href="/user-address">
              <div class="stats-card">
                <div class="icon"><i class="fas fa-location-dot"></i></div>
                <h5><%=addressCount%></h5>
                <p>Saved Address</p>
              </div>
            </a>
          </div>
        </div>

        <hr class="my-4">

        <div class="d-flex flex-column flex-md-row justify-content-between align-items-start">
          <div class="profile-info">
            <h5><%=user.firstname%> <%=user.lastname%></h5>
            <p><strong>Email:</strong> <%=user.email%></p>
            <p><strong>Phone:</strong> <%=user.phone%></p>
            <p><strong>Member Since:</strong> <%= user.createdOn.toISOString().split('T')[0] %></p>
            <p><strong>Referral Code:</strong> <span class="text-danger"><%=user.referralCode%></span></p>
            <p><strong>Referred Code:</strong> <span class="text-danger"><%=user.usedReferralCode || 'None' %></span></p>
            
            <div class="d-flex gap-2 mt-3 flex-wrap">
              <button class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#changeEmailModal">
                Change Email
              </button>
              <button class="btn btn-outline-danger btn-sm" data-bs-toggle="modal" data-bs-target="#changePasswordModal">
                Change Password
              </button>
            </div>
          </div>
          <div class="mt-3 mt-md-0">
            <a href="/edit-profile" class="btn btn-danger">Edit Profile</a>
          </div>
        </div>

        <div class="note">
          <i class="fas fa-info-circle me-2"></i>Share your referral code to get wallet money.
        </div>
      </div>
    </div>
  </div>
</div>


<div class="modal fade" id="changeEmailModal" tabindex="-1" aria-labelledby="changeEmailModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-light">
        <h5 class="modal-title" id="changeEmailModalLabel">Change Email Address</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      
      <div class="modal-body bg-white">
        <form id="changeEmailForm" action="/user-change-email" method="POST">
          <div class="mb-3">
            <label for="currentPasswordForEmail" class="form-label">Current Password</label>
            <input type="password" class="form-control" id="currentPasswordForEmail" name="currentPassword" required>
          </div>
          <div class="mb-3">
            <label for="newEmail" class="form-label">New Email Address</label>
            <input type="email" class="form-control" id="newEmail" name="newEmail" required>
          </div>
          <div id="emailVerificationSection" style="display: none;">
            <div class="alert alert-info">
              A verification code has been sent to your new email.
            </div>
            <div class="mb-3">
              <label for="verificationCode" class="form-label">Verification Code</label>
              <input type="text" class="form-control" id="verificationCode" name="verificationCode" placeholder="Enter 6-digit code">
            </div>
          </div>
        </form>
      </div>
      
      <div class="modal-footer bg-light justify-content-between">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" id="sendVerificationBtn" class="btn btn-primary" style="display: none;">Send Verification</button>
        <button type="submit" id="submitEmailChangeBtn" form="changeEmailForm" class="btn btn-primary">Continue</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-light">
        <h5 class="modal-title" id="changePasswordModalLabel">Change Password</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      
      <div class="modal-body bg-white">
        <form id="changePasswordForm" action="/user-change-password" method="POST">
          <div class="mb-3">
            <label for="currentPassword" class="form-label">Current Password</label>
            <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
          </div>
          <div class="mb-3">
            <label for="newPassword" class="form-label">New Password</label>
            <input type="password" class="form-control" id="newPassword" name="newPassword" required minlength="8">
            <small class="text-muted">Password must be at least 8 characters long</small>
          </div>
          <div class="mb-3">
            <label for="confirmPassword" class="form-label">Confirm New Password</label>
            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
            <div id="passwordMatchError" class="text-danger" style="display: none;">Passwords don't match!</div>
          </div>
        </form>
      </div>
      
      <div class="modal-footer bg-light justify-content-between">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        
        <button type="submit" form="changePasswordForm" class="btn btn-primary">Save</button>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>

  document.addEventListener('DOMContentLoaded', function() {
    
    const form = document.getElementById('changePasswordForm');
    const newPassword = document.getElementById('newPassword');
    const confirmPassword = document.getElementById('confirmPassword');
    const errorElement = document.getElementById('passwordMatchError');
    
    if (!form || !newPassword || !confirmPassword || !errorElement) {
      console.error('One or more form elements missing!');
      return;
    }

    function validatePasswords() {
      const match = newPassword.value === confirmPassword.value;
      errorElement.style.display = match ? 'none' : 'block';
      return match;
    }

    confirmPassword.addEventListener('input', validatePasswords);
    newPassword.addEventListener('input', validatePasswords);

    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      if (!validatePasswords()) {
        alert('Please make sure passwords match!');
        return;
      }
      
      try {
        const formData = new URLSearchParams(new FormData(form));
        const response = await fetch(form.action, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
          },
          body: formData
        });
        
        const result = await response.json();
        
      if (response.ok) {
  Swal.fire({
    icon: 'success',
    title: 'Password Changed!',
    text: 'Your password was changed successfully.',
    confirmButtonColor: '#ff4646'
  }).then(() => {
    const modalElement = document.getElementById('changePasswordModal');
    const modal = bootstrap.Modal.getInstance(modalElement) || new bootstrap.Modal(modalElement);
    modal.hide();
    form.reset();
  });
} else {
  Swal.fire({
    icon: 'error',
    title: 'Error',
    text: result.error || 'Failed to change password'
  });
}
    }catch(err){
}
})
})

document.addEventListener('DOMContentLoaded', function() {
    const changeEmailForm = document.getElementById('changeEmailForm');
    const emailVerificationSection = document.getElementById('emailVerificationSection');
    const sendVerificationBtn = document.getElementById('sendVerificationBtn');
    const submitEmailChangeBtn = document.getElementById('submitEmailChangeBtn');
    const newEmailInput = document.getElementById('newEmail');
    const verificationCodeInput = document.getElementById('verificationCode');

    if (!changeEmailForm) return;

    let verificationCode = null;

    changeEmailForm.addEventListener('submit', async function(e) {
      e.preventDefault();

      if (!verificationCode) {
        try {
          const response = await fetch('/send-email-verification', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              newEmail: newEmailInput.value,
              currentPassword: document.getElementById('currentPasswordForEmail').value
            })
          });

          const result = await response.json();

          if (response.ok) {
            verificationCode = result.tempCode; 
            emailVerificationSection.style.display = 'block';
            sendVerificationBtn.style.display = 'none';
            submitEmailChangeBtn.style.display = 'block';
            submitEmailChangeBtn.textContent = 'Verify & Change Email';
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: result.error || 'Failed to send verification'
            });
          }
        } catch (error) {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to send verification email'
          });
        }
      } else {
        const enteredCode = document.getElementById('verificationCode').value;
        if (enteredCode !== verificationCode) {
          Swal.fire({
            icon: 'error',
            title: 'Invalid Code',
            text: 'The verification code you entered is incorrect.'
          });
          return;
        }

        try {
          const formData = new URLSearchParams(new FormData(changeEmailForm));
          const response = await fetch('/resend-email-verification', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: formData
          });

          const result = await response.json();

          if (response.ok) {
            Swal.fire({
              icon: 'success',
              title: 'Email Changed!',
              text: 'Your email has been updated successfully. Please log in again.',
              confirmButtonColor: '#ff4646'
            }).then(() => {
              window.location.reload();
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: result.error || 'Failed to change email'
            });
          }
        } catch (error) {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while changing email'
          });
        }
      }
    });
  });
</script>

</body>
<%- include('../../views/partials/user/footer') %>