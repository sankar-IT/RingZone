<%- include('../../views/partials/user/header') %>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet"/>
  <style>
    body {
      background-color: #f5f5f5;
      font-family: 'Segoe UI', sans-serif;
      margin-top: 120px;
    }

    .step-nav span {
      padding: 8px 14px;
      border-radius: 10px;
      margin-right: 10px;
      font-weight: 500;
      font-size: 15px;
      background-color: #eee;
    }
    .step-nav .active {
      background-color: #ff4646;
      color: #fff;
      box-shadow: 0 3px 8px rgba(255, 70, 70, 0.3);
    }

    .btn-red {
      background-color: #ff4646;
      color: white;
      border: none;
      font-weight: 600;
    }

    .btn-red:hover {
      background-color: #e63e3e;
    }

    .address-box {
      background: white;
      padding: 25px;
      border-radius: 15px;
      box-shadow: 0 0 10px rgba(0,0,0,0.07);
      transition: box-shadow 0.3s ease;
    }

    .address-box:hover {
      box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }

    .form-check-label i {
      color: #ff4646;
      margin-right: 8px;
    }

    .btn-add-address {
      font-size: 14px;
      margin-top: 10px;
    }
    .cart-box { background: #fff; border-radius: 12px; padding: 20px; box-shadow: 0 0 5px rgba(0,0,0,0.1); }

    @media (max-width: 768px) {
      .step-nav span {
        font-size: 13px;
        margin-right: 6px;
      }
    }
  </style>
</head>
<body>
<div class="container my-5">

  <!-- Step Indicator -->
  <div class="mb-4 text-center step-nav">
   <a href="/user-cart"> <span>Cart</span> </a>
   <a href=""><span class="active">Checkout</span> </a>
    <a href=""><span>Payment</span></a>
  </div>

  <div class="row">
    <!-- Address Selection -->
    <div class="col-md-8">
      <div class="address-box mb-4">
        <h5 class="mb-4">Select Delivery Address</h5>

        <div  id="addressList">

          <%if(addressData || addressData.addresses.length >0){%>
            <% addressData.addresses.forEach((addr,indx)=>{ %>
              <div class="form-check mb-3">
                <input class="form-check-input" type="radio" value="<%= addr._id %>"  name="address" id="addr1" <%= selectedAddress && selectedAddress == addr._id ? 'checked' : indx == 0 ? 'checked' : ''   %> >
                <label class="form-check-label" for="addr1">
                  <i class="fas fa-home"></i>
                  <%=addr.firstName%>,<%=addr.address%>,<%=addr.city%>,<%=addr.pincode%>
                </label>
              </div>
              <%}) }%>


            </div>

        <button class="btn btn-outline-dark btn-sm btn-add-address" data-bs-toggle="modal" data-bs-target="#addAddressModal">
          <i class="fas fa-plus-circle"></i> Add New Address
        </button>
      </div>

      <!-- Shipping Method -->
      <div>
        <div class="form-check mb-2">
        </div>
        <div class="form-check">
        </div>
      </div>
    </div>

    <!-- Order Summary -->
      <div class="col-md-4">
  <div class="cart-box">
    <h5 class="mb-3">Order summary</h5>
    <div class="d-flex justify-content-between mb-2">
      <span>Subtotal</span><span id="subtotal">₹<%= orderSummary.subtotal %></span>
    </div>
    <div class="d-flex justify-content-between mb-2 align-items-center">
  <span>Discount</span>
  <div>
    <span id="discountValue">₹<%= orderSummary.discount %></span>
   <% if (orderSummary.discount > 0) { %>
  <button class="btn btn-sm btn-link text-danger p-0 ms-2" id="removeCouponBtn" title="Remove Coupon"> Remove coupon
  </button>
<% } else { %>
  <button class="btn btn-sm btn-link text-danger p-0 ms-2 d-none" id="removeCouponBtn" title="Remove Coupon">
    <i class="fas fa-times-circle"></i>
  </button>
<% } %>

  </div>
</div>

    <div class="d-flex justify-content-between mb-2">
      <span>Shipment Cost</span><span id="shipment">₹<%= orderSummary.shipment %></span>
    </div>
    <hr>
    <div class="d-flex justify-content-between fw-bold mb-3">
      <span>Grand Total</span><span id="grandTotal">₹<%= orderSummary.grandTotal %></span>
    </div>
    <div class="input-group my-3">
      <input type="text" class="form-control form-control-sm" placeholder="Enter Coupon Code" id="couponCode">
      <button class="btn btn-sm btn-outline-secondary" id="applyCoupon">Apply</button>
      <button class="btn btn-sm btn-outline-info m-1" data-bs-toggle="modal" data-bs-target="#couponModal">View Coupons</button>
    </div>

   <button id="checkoutBtn" class="btn btn-success">
  <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="checkoutSpinner"></span>
  <span id="checkoutText">Proceed to Payment</span>
</button>

  </div>
</div>
  </div>
</div>


<div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
     <form id="addAddressForm" class="modal-content p-3">
      <div class="modal-header">
        <h5 class="modal-title" id="addAddressModalLabel">
          <i class="fas fa-plus-circle me-1 text-danger"></i>Add New Address
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>

      <div class="modal-body">
        <div class="row g-3">
          <div class="col-md-6">
            <label for="firstName" class="form-label"><i class="fas fa-user me-1"></i>First Name</label>
            <input type="text" class="form-control form-control-sm" id="firstName" name="firstName" required>
          </div>

          <div class="col-md-6">
            <label for="lastName" class="form-label"><i class="fas fa-user me-1"></i>Last Name</label>
            <input type="text" class="form-control form-control-sm" id="lastName" name="lastName" required>
          </div>

        <div class="col-md-6">
    <label for="phone" class="form-label"><i class="fas fa-phone me-1"></i>Phone Number</label>
    <input type="text" class="form-control form-control-sm" id="phone" name="phone" maxlength="10" required>
    <div class="invalid-feedback" id="phoneError" style="display: none;">Please enter a valid 10-digit phone number</div>
</div>

<div class="col-md-6">
    <label for="pinCode" class="form-label"><i class="fas fa-map-pin me-1"></i>Pin Code</label>
    <input type="number" class="form-control form-control-sm" id="pinCode" name="pinCode" maxlength="6" required>
    <div class="invalid-feedback" id="pinCodeError" style="display: none;">Please enter a valid 6-digit pincode</div>
</div>

          <div class="col-12">
            <label for="address" class="form-label"><i class="fas fa-location-dot me-1"></i>Full Address</label>
            <textarea class="form-control form-control-sm" id="address" name="address" rows="2" required></textarea>
          </div>

          <div class="col-md-4">
            <label for="city" class="form-label"><i class="fas fa-city me-1"></i>City</label>
            <input type="text" class="form-control form-control-sm" id="city" name="city" required>
          </div>

          <div class="col-md-4">
            <label for="state" class="form-label"><i class="fas fa-flag me-1"></i>State</label>
            <input type="text" class="form-control form-control-sm" id="state" name="state" required>
          </div>

          <div class="col-md-4">
            <label class="form-label"><i class="fas fa-tag me-1"></i>Address Type</label>
            <div>
              <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="addressType" id="home" value="home" required>
                <label class="form-check-label" for="home">Home</label>
              </div>
              <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="addressType" id="work" value="work">
                <label class="form-check-label" for="work">Work</label>
              </div>
            </div>
          </div>

          <div class="col-md-6 d-flex align-items-center">
          </div>
        </div>
      </div>

      <div class="modal-footer">
        <button type="submit" class="btn btn-red btn-sm w-100">
          <i class="fas fa-save me-1"></i> Save Address
        </button>
      </div>
    </form>
  </div>
</div>

<!-- Coupon Modal -->
<div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header bg-light">
        <h5 class="modal-title text-danger fw-semibold" id="couponModalLabel">
          <i class="fas fa-tags me-2"></i>Available Coupons
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>

      <div class="modal-body">
        <div class="row g-3">
          <% if (couponData && couponData.length > 0) { %>
            <% couponData.forEach(coupon => { %>
              <div class="col-12">
                <div class="border rounded p-3 d-flex justify-content-between align-items-center bg-white shadow-sm">
                  <div>
                    <h6 class="text-primary mb-1">
                      <i class="fas fa-ticket-alt me-1"></i><%= coupon.couponCode %>
                    </h6>
                    <p class="mb-0 small text-muted">₹<%= coupon.instruction %> off</p>
                  </div>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="col-12 text-center text-muted">
              <p>No coupons available at the moment.</p>
            </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  // Coupon application function
  function applyCoupon(code) {
    document.getElementById('couponCode').value = code;
    const modal = bootstrap.Modal.getInstance(document.getElementById('couponModal'));
    modal.hide();
  }

  let shipment = 0; 
  let discount = 0;

  const errorMsg = document.getElementById('errorMsg');
  const checkoutBtn = document.getElementById('checkoutBtn');
  const subtotalEl = document.getElementById('subtotal');
  const discountValue = document.getElementById('discountValue');
  const grandTotalEl = document.getElementById('grandTotal');

  function formatRupee(value) {
    return `₹${value.toLocaleString('en-IN')}.00`;
  }

  function updateTotals() {
    const cartItems = document.querySelectorAll('.cart-item');
    let subtotal = 0;
    
    cartItems.forEach(item => {
        const unitPrice = parseFloat(item.getAttribute('data-price'));
        const qty = parseInt(item.querySelector('.quantity-input').value);
        const itemTotal = unitPrice * qty;
        subtotal += itemTotal;
        item.querySelector('.item-total').textContent = formatRupee(itemTotal);
    });
    
    subtotalEl.textContent = formatRupee(subtotal);
    shipment = subtotal < 10000 ? 100 : 0;

    const shipmentEl = document.getElementById('shipment');
    if (shipmentEl) {
        shipmentEl.textContent = shipment === 0 ? 'Free' : formatRupee(shipment);
    }

    // Include discount in grand total calculation
    const grandTotal = subtotal - discount + shipment;
    grandTotalEl.textContent = formatRupee(grandTotal);
}

  function validateCart() {
    const cartItems = document.querySelectorAll('.cart-item');
    let valid = true;
    let error = "";

    cartItems.forEach(item => {
      const qty = parseInt(item.querySelector('.quantity-input').value);
      if (qty > 3) {
        valid = false;
        error = " You can only purchase up to 3 quantities per product.";
      }
    });

    if (!valid) {
      errorMsg.style.display = 'block';
      errorMsg.textContent = error;
      checkoutBtn.classList.add('disabled');
      checkoutBtn.style.pointerEvents = 'none';
    } else {
      errorMsg.style.display = 'none';
      checkoutBtn.classList.remove('disabled');
      checkoutBtn.style.pointerEvents = 'auto';
    }

    updateTotals();
  }

  function updateAddressList(newAddress) {
    const addressList = document.getElementById('addressList');
    const addressElement = document.createElement('div');
    addressElement.className = 'form-check mb-3';
    addressElement.innerHTML = `
      <input class="form-check-input" type="radio" name="address" id="addr1" checked>
      <label class="form-check-label" for="addr1">
        <i class="fas fa-home"></i>
        ${newAddress.firstName}, ${newAddress.address}, ${newAddress.city}, ${newAddress.state}
      </label>
    `;
    addressList.appendChild(addressElement);
  }

  document.getElementById('addAddressForm').addEventListener('submit', async function (e) {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);

    const phone = formData.get('phone');
    const pinCode = formData.get('pinCode');

    const requiredFields = ['firstName', 'lastName', 'phone', 'pinCode', 'address', 'city', 'state', 'addressType'];
    let isValid = true;

    requiredFields.forEach(field => {
      if (!formData.get(field)) {
        isValid = false;
        const input = document.getElementById(field);
        input.classList.add('is-invalid');
        input.nextElementSibling?.classList.add('d-block');
      }
    });

    if (phone && !/^\d{10}$/.test(phone)) {
      isValid = false;
      document.getElementById('phone').classList.add('is-invalid');
      document.getElementById('phoneError').classList.add('d-block');
    }

    if (pinCode && !/^\d{6}$/.test(pinCode)) {
      isValid = false;
      document.getElementById('pinCode').classList.add('is-invalid');
      document.getElementById('pinCodeError').classList.add('d-block');
    }

    if (!isValid) return false;

    // Clear errors
    document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
    document.querySelectorAll('.invalid-feedback').forEach(el => el.classList.remove('d-block'));

    const data = {
      firstName: formData.get('firstName'),
      lastName: formData.get('lastName'),
      phone: formData.get('phone'),
      pinCode: formData.get('pinCode')?.toString().trim(),
      address: formData.get('address'),
      city: formData.get('city'),
      state: formData.get('state'),
      addressType: formData.get('addressType')
    };

    try {
      const response = await fetch('/add-new-address', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      const result = await response.json();

      if (result.success) {
        Swal.fire({
          title: 'Success!',
          text: 'Address added successfully!',
          icon: 'success',
          confirmButtonText: 'OK'
        }).then(() => {
          form.reset();
          if (window.location.pathname === '/checkout') {
            updateAddressList(data);
          } else if (result.redirectUrl) {
            window.location.href = result.redirectUrl;
          }
        });
      } else {
        Swal.fire({
          title: 'Error!',
          text: result.message || 'Failed to add address.',
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    } catch (err) {
      console.error(err);
      Swal.fire({
        title: 'Error!',
        text: 'Something went wrong while saving address.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
    }
  });

  
  document.querySelectorAll('input[name="shipping"]').forEach(radio => {
    radio.addEventListener('change', () => {
      shipment = parseInt(radio.value);

      const subtotal = parseInt(subtotalEl.textContent.replace(/[^\d]/g, '')) || 0;
      const discount = parseInt(discountValue.textContent.replace(/[^\d]/g, '')) || 0;
      const grandTotal = subtotal - discount + shipment;

      document.getElementById('shipment').textContent = `₹${shipment}`;
      grandTotalEl.textContent = `₹${grandTotal}`;
    });
  });

   document.getElementById('checkoutBtn').addEventListener('click', async () => {
    const spinner = document.getElementById('checkoutSpinner');
    const btnText = document.getElementById('checkoutText');
    const btn = document.getElementById('checkoutBtn');

    spinner.classList.remove('d-none');
    btnText.textContent = 'Processing...';
    btn.disabled = true;

    const selectedShipment = document.querySelector('input[name="shipping"]:checked')?.value || '100';
    const addressId = document.querySelector('input[name="address"]:checked').value;

    try {
        const response = await fetch('/load-payment', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ 
                shipment: selectedShipment,
                addressId,
                discount: discount 
            })  
        });

        const result = await response.json();

        if (response.ok && result.success) {
            window.location.href = '/load-payment';
        } else {
            Swal.fire({
                icon: 'warning',
                title: 'Oops!',
                text: result.message || 'Your cart is empty.',
                confirmButtonColor: '#ff7f50'
            });
            spinner.classList.add('d-none');
            btnText.textContent = 'Proceed to Checkout';
            btn.disabled = false;
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Something went wrong',
            confirmButtonColor: '#ff7f50'
        });
        spinner.classList.add('d-none');
        btnText.textContent = 'Proceed to Checkout';
        btn.disabled = false;
    }
});

document.getElementById('applyCoupon').addEventListener('click', async () => {
    const couponCode = document.getElementById('couponCode').value.trim();
    const subtotalText = document.getElementById('subtotal').textContent;
    const subtotal = parseFloat(subtotalText.replace(/[^\d.]/g, '')) || 0;

    if (!couponCode) {
        Swal.fire({
            icon: 'warning',
            title: 'No Coupon Code',
            text: 'Please enter a coupon code',
            confirmButtonColor: '#ff7f50'
        });
        return;
    }

    try {
        const response = await fetch('/apply-coupon', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ couponCode })
        });

        const result = await response.json();

        if (result.success) {
            discount = result.discount;
            const shipment = result.shipment || 0;
            
            document.getElementById('discountValue').textContent = `₹${discount.toFixed(2)}`;
            document.getElementById('grandTotal').textContent = `₹${result.grandTotal.toFixed(2)}`;
            document.getElementById('removeCouponBtn').classList.remove('d-none');
          

            Swal.fire({
                icon: 'success',
                title: 'Coupon Applied',
                text: `'${couponCode}' has been applied successfully!`,
                confirmButtonColor: '#28a745'
            });
        } else {
            Swal.fire({
                icon: 'warning',
                title: 'Invalid Coupon',
                text: result.message || 'This coupon is not applicable.',
                confirmButtonColor: '#dc3545'
            });
        }
    } catch (error) {
        console.error(error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong. Try again later.',
            confirmButtonColor: '#dc3545'
        });
    }
});
document.getElementById('removeCouponBtn').addEventListener('click', async () => {
  try {
    const response = await fetch('/remove-coupon', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' }
    });

    const result = await response.json();

    if (result.success) {
      discount = 0;

      document.getElementById('discountValue').textContent = '₹0.00';
      document.getElementById('grandTotal').textContent = `₹${result.grandTotal.toFixed(2)}`;
      document.getElementById('couponCode').value = '';
      document.getElementById('removeCouponBtn').classList.add('d-none');

      Swal.fire({
        icon: 'success',
        title: 'Coupon Removed',
        text: 'Your discount has been removed.',
        confirmButtonColor: '#198754'
      });
    }
  } catch (err) {
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'Could not remove coupon. Try again later.',
      confirmButtonColor: '#dc3545'
    });
  }
});

</script>

</body>
<%- include('../../views/partials/user/footer') %>