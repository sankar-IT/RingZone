
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

  <style>
    :root {
      --sidebar-bg: #2c3e50;
      --sidebar-hover: #34495e;
      --topbar-bg: #ffffff;
      --content-bg: #f8f9fa;
      --card-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.05);
    }
    body {
      margin: 0;
      font-family: 'Inter', sans-serif;
      background-color: var(--content-bg);
      display: flex;
      min-height: 100vh;
    }
    .sidebar {
      background-color: var(--sidebar-bg);
      width: 250px;
      height: 100vh;
      color: white;
      display: flex;
      flex-direction: column;
      padding: 20px 0;
      box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
      position: fixed;
      z-index: 1000;
    }
    .sidebar h2 {
      font-weight: 700;
      font-size: 1.5rem;
      padding: 0 20px 20px;
      margin: 0;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    .sidebar .nav-link {
      color: rgba(255, 255, 255, 0.8);
      padding: 10px 20px;
      margin: 5px 0;
      font-weight: 500;
      border-radius: 0;
      border-left: 3px solid transparent;
      transition: all 0.3s ease;
    }
    .sidebar .nav-link:hover,
    .sidebar .nav-link.active {
      color: white;
      background-color: var(--sidebar-hover);
      border-left: 3px solid #ffffff;
    }
    .sidebar .nav-link i {
      width: 24px;
      text-align: center;
      margin-right: 10px;
    }
    .main {
      flex: 1;
      margin-left: 250px;
      padding: 20px;
    }
    .badge.coupon {
  background-color: #4a5568;
  color: white;
  font-weight: 500;
  padding: 5px 8px;
  border-radius: 4px;
}
    .topbar {
      height: 60px;
      background-color: var(--topbar-bg);
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 20px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      position: sticky;
      top: 0;
      z-index: 100;
    }
    .content {
      margin-top: 20px;
      padding: 25px;
      background-color: white;
      border-radius: 8px;
      box-shadow: var(--card-shadow);
    }
    .content h1 {
      margin: 0;
      font-size: 1.75rem;
      font-weight: 700;
      color: #2d2d2d;
      padding-bottom: 15px;
      border-bottom: 1px solid #eee;
      margin-bottom: 20px;
    }
    .btn-logout {
      background-color: #e74c3c;
      border: none;
      padding: 8px 20px;
      border-radius: 6px;
      font-weight: 600;
      transition: all 0.3s;
    }
    .btn-logout:hover {
      background-color: #c0392b;
      transform: translateY(-1px);
    }
    .search {
      padding: 0.6rem 1rem;
      width: 100%;
      max-width: 260px;
      border-radius: 25px;
      border: 1px solid #ccc;
      background-color: #fff;
      outline: none;
    }
    .filters {
      display: flex;
      gap: 0.8rem;
      margin-bottom: 1.2rem;
      flex-wrap: wrap;
      align-items: center;
    }
    .filters select,
    .filter-btn {
      padding: 0.5rem 0.8rem;
      border: 1px solid #ccc;
      background: white;
      border-radius: 10px;
      cursor: pointer;
      font-size: 0.9rem;
    }
    .filter-btn {
      display: flex;
      align-items: center;
      gap: 0.4rem;
    }
    .table-container {
      background: #ffffff;
      border-radius: 12px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
      overflow-x: auto;
      padding: 15px;
    }
    #orderTable {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0 10px;
      font-size: 15px;
    }
    #orderTable thead {
      background-color: #f8f9fc;
      color: #333;
    }
    #orderTable th {
      text-align: left;
      padding: 14px 12px;
      font-weight: 600;
      font-size: 14px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    #orderTable tbody tr {
      background-color: #ffffff;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
      transition: all 0.3s ease;
    }
    #orderTable tbody tr:nth-child(even) {
      background-color: #f9fbff;
    }
    #orderTable tbody tr:hover {
      background-color: #eef4ff;
      transform: scale(1.01);
    }
    #orderTable td {
      padding: 12px 14px;
      color: #333;
      font-size: 14px;
      vertical-align: middle;
    }
    .badge {
      font-weight: 600;
      font-size: 0.75rem;
      padding: 6px 10px;
      border-radius: 20px;
    }
    .badge.delivered { background-color: #155724; color: #f9fcfa; }
    .badge.processing { background-color: #856404; color: #fafaf9; }
    .badge.cancelled { background-color: #721c24; color: #f3f1f1; }
    .badge.confirmed { background-color: #155724; color: #f9f9f9; }
    .badge.pending { background-color: #6c757d; color: #f1f2f4; }
    .badge.shipped { background-color: #0c5460; color: #fafcfd; }
    .badge.returned{background-color: darkslategrey; color: white;}
    .edit-btn {
      border: none;
      background: #edf2f7;
      padding: 0.3rem 0.5rem;
      border-radius: 6px;
      cursor: pointer;
      color: #333;
    }
    #pagination {
  display: flex;
  justify-content: center;
  width: 100%;
}

.pagination-container {
  display: inline-flex;
  justify-content: center;
  margin-top: 20px;
  gap: 6px;
  margin-left: auto;
  margin-right: auto;
}

.pagination-container a,
.pagination-container .current-page {
  display: inline-block;
  padding: 8px 14px;
  margin: 0 3px;
  border-radius: 6px;
  font-size: 14px;
  font-weight: 500;
  text-decoration: none;
  transition: all 0.3s ease;
  color: #ff4646; 
  border: 1px solid #ff4646;
}

.pagination-container a:hover {
  background-color: #ff4646;
  color: #fff; 
}

.pagination-container .current-page {
  background-color: #ff4646;
  color: #fff;
  border: 1px solid #ff4646;
  cursor: default;
}

    @media screen and (max-width: 768px) {
      .wrapper { padding: 1rem; }
      .filters { flex-direction: column; gap: 0.5rem; }
      .filters select, .filter-btn, .search { width: 100%; }
      table { font-size: 0.85rem; }
      th, td { padding: 0.5rem 0.6rem; }
    }
    
  </style>
</head>
<body>
  <div class="sidebar">
    <h2>RingZone</h2>
    <a href="/admin/Dashboard" class="nav-link"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
    <a href="/admin/productlist" class="nav-link"><i class="fas fa-box-open"></i> Products</a>
    <a href="/admin/order-list" class="nav-link"><i class="fas fa-receipt"></i> Order Lists</a>
    <a href="/admin/users" class="nav-link"><i class="fas fa-users"></i> Users</a>
    <a href="/admin/brands" class="nav-link"><i class="fas fa-briefcase"></i> Brands</a>
    <a href="/admin/sales" class="nav-link"><i class="fas fa-chart-line"></i> Sales Report</a>
    <a href="/admin/Coupons" class="nav-link"><i class="fas fa-tags"></i> Coupons</a>
    <a href="/admin/category" class="nav-link"><i class="fas fa-th-large"></i> Category</a>
  </div>
  <div class="main">
    <div class="topbar">
      <h1 class="m-0 fs-4 text-dark">Orders List</h1>
      <a href="/admin/logout" class="btn-logout text-white"><i class="fas fa-sign-out-alt me-2"></i>Logout</a>
    </div>
    <div class="wrapper" style="margin-top: 20px;">
      <header style="display: flex; gap: 10px; align-items: center;">
        <input type="text" class="search" placeholder="🔍 Search orders..." id="searchInput" />
        <button class="btn btn-secondary btn-sm" id="clearBtn">Clear</button>
      </header>
  
      <div class="filters" style="margin-top: 20px;">
        <label class="filter-btn"><i class="fas fa-filter"></i> Status</label>
        <select id="statusFilter">
          <option value="all">All</option>
          <option value="processing">Processing</option>
          <option value="pending">Pending</option>
          <option value="confirmed">Confirmed</option>
          <option value="shipped">Shipped</option>
          <option value="delivered">Delivered</option>
          <option value="cancelled">Cancelled</option>
        </select>
        <label class="filter-btn"><i class="fas fa-sort"></i> Sort</label>
        <select id="sortSelect">
          <option value="default">Default</option>
          <option value="az">A-Z</option>
          <option value="za">Z-A</option>
          <option value="latest">Latest</option>
          <option value="oldest">Oldest</option>
        </select>
      </div>
      <div class="table-container">
        <table id="orderTable">
         <thead style="color: white; background-color: #ff4646;">
  <tr>
    <th>ID</th>
    <th>Name</th>
    <th>Address</th>
    <th>Date</th>
    <th>Coupon code</th>
    <th>Status</th>
    <th>Edit</th>
  </tr>
</thead>
          <tbody>
            <% if (orders.length === 0) { %>
              <tr><td colspan="7" class="text-center">No orders found</td></tr>
            <% } else { %>
           <% orders.forEach((order, index) => { %>
             <% if (order.status !== 'Pending') { %>
  <tr data-status="<%= order.status.toLowerCase().replace(/\s+/g,'-') %>">
    <td><%= order.orderId %></td>
    <td>
      <%= order.address && order.address.name
          ? order.address.name.replace(/\+/g, ' ').split(' ')[0]
          : 'N/A' %>
    </td>
    <td><%= order.address?.address %></td>
    <td><%= order.invoiceDate.toISOString().slice(0, 10) %></td>
    <td>
      <% if (order.coupon && order.coupon.couponCode) { %>
        <span class="badge coupon" title="Discount: <%= order.coupon.discountAmount %>">
          <%= order.coupon.couponCode %>
        </span>
      <% } else { %>
        <span class="text-muted">-</span>
      <% } %>
    </td>
    <td>
      <span class="badge <%= order.status.toLowerCase().replace(/\s+/g, '-') %>"><%= order.status %></span>
    </td>
    <td>
      <a href="/admin/update-orders/<%= order._id %>"><button class="edit-btn"><i class="fas fa-pen"></i></button></a>
    </td>
  </tr>
             <% } %>
<% }); %>
            <% } %>
          </tbody>
        </table>
      </div>
      <div class="pagination" id="pagination"></div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const rowsPerPage = 5;
    let currentPage = 1;

    const table = document.getElementById('orderTable');
    const tbody = table.querySelector('tbody');
    const allRows = Array.from(tbody.querySelectorAll('tr'));
    const pagination = document.getElementById('pagination');
    const sortSelect = document.getElementById('sortSelect');
    const statusFilter = document.getElementById('statusFilter');
    const searchInput = document.getElementById('searchInput');
    const clearBtn = document.getElementById('clearBtn');

function renderTable(page = 1, items = allRows) {
  tbody.innerHTML = '';

  if (items.length === 0) {
    const noDataRow = document.createElement('tr');
    noDataRow.innerHTML = `
      <td colspan="6" class="text-center" style="padding: 30px; color: #777;">
        <i class="fas fa-box-open" style="font-size: 28px; color: #bbb; display:block; margin-bottom:10px;"></i>
        No orders found
      </td>`;
    tbody.appendChild(noDataRow);
    pagination.innerHTML = ''; 
    return;
  }

  const start = (page - 1) * rowsPerPage;
  const visibleRows = items.slice(start, start + rowsPerPage);
  visibleRows.forEach(row => tbody.appendChild(row));
}


function renderPagination(items = allRows) {
  const pageCount = Math.ceil(items.length / rowsPerPage) || 1;
  pagination.innerHTML = ''; 
 
  const paginationWrapper = document.createElement('div');
  paginationWrapper.className = 'pagination-container';

  const paginationDiv = document.createElement('div');
  paginationDiv.className = 'pagination';

  if (currentPage > 1) {
    const prevLink = document.createElement('a');
    prevLink.href = '#';
    prevLink.innerHTML = '&laquo; Prev';
    prevLink.addEventListener('click', (e) => {
      e.preventDefault();
      currentPage--;
      renderTable(currentPage, items);
      renderPagination(items);
    });
    paginationDiv.appendChild(prevLink);
  }

 
  for (let i = 1; i <= pageCount; i++) {
    if (i === currentPage) {
      const span = document.createElement('span');
      span.className = 'current-page';
      span.textContent = i;
      paginationDiv.appendChild(span);
    } else {
      const link = document.createElement('a');
      link.href = '#';
      link.textContent = i;
      link.addEventListener('click', (e) => {
        e.preventDefault();
        currentPage = i;
        renderTable(currentPage, items);
        renderPagination(items);
      });
      paginationDiv.appendChild(link);
    }
  }


  if (currentPage < pageCount) {
    const nextLink = document.createElement('a');
    nextLink.href = '#';
    nextLink.innerHTML = 'Next &raquo;';
    nextLink.addEventListener('click', (e) => {
      e.preventDefault();
      currentPage++;
      renderTable(currentPage, items);
      renderPagination(items);
    });
    paginationDiv.appendChild(nextLink);
  }

  paginationWrapper.appendChild(paginationDiv);
  pagination.appendChild(paginationWrapper);
}


 function sortRows(value, rows = []) {
  const sorted = [...rows];
  switch (value) {
    case 'az':
      return sorted.sort((a, b) => a.children[1].innerText.localeCompare(b.children[1].innerText));
    case 'za':
      return sorted.sort((a, b) => b.children[1].innerText.localeCompare(a.children[1].innerText));
    case 'latest':
      return sorted.sort((a, b) => new Date(b.children[3].innerText) - new Date(a.children[3].innerText));
    case 'oldest':
      return sorted.sort((a, b) => new Date(a.children[3].innerText) - new Date(b.children[3].innerText));
    default:
      return sorted; 
  }
}

function filterRows(searchTerm, statusValue) {
  const s = (searchTerm || '').toLowerCase();
  const st = (statusValue || 'all');
  return allRows.filter(row => {
    const orderId = row.children[0].innerText.toLowerCase();
    const name = row.children[1].innerText.toLowerCase();
    const date = row.children[3].innerText.toLowerCase();
    const couponCode = row.children[4].innerText.toLowerCase(); 
    const rowStatus = (row.dataset.status || '').toLowerCase();
    
    const matchesSearch = !s || 
      orderId.includes(s) || 
      name.includes(s) || 
      date.includes(s) ||
      couponCode.includes(s); 
      
    const matchesStatus = st === 'all' || rowStatus === st;
    return matchesSearch && matchesStatus;
  });
}
    function applyFiltersAndRender() {
      const searchTerm = searchInput.value.trim();
      const statusValue = statusFilter.value; 
      const filteredRows = filterRows(searchTerm, statusValue);
      const sortedRows = sortRows(sortSelect.value, filteredRows);
      currentPage = 1;
      renderTable(currentPage, sortedRows);
      renderPagination(sortedRows);
    }

    searchInput.addEventListener('input', applyFiltersAndRender);
    sortSelect.addEventListener('change', applyFiltersAndRender);
    statusFilter.addEventListener('change', applyFiltersAndRender);

    clearBtn.addEventListener('click', () => {
      searchInput.value = '';
      statusFilter.value = 'all';
      sortSelect.value = 'default';
      applyFiltersAndRender();
    });

    applyFiltersAndRender();
  </script>
</body>
